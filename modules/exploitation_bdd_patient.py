import profil as p
import base_donnee_texte as bdd


#Potentiellement pour la suite : les antécédants des patients, antécédants médicaux et anciennes visites, chez qui, pourquoi.
#Voir sa famille également pour voir qui y'a
#voir si il est majeur ou pas enfin le mettre quelque part quoi
#Motif de rendez vous


def recherche_patient(string):
    """Cette fonction permet de prendre une chaine de caract en parametre, et retourne parmis tous les 
    patients existants ceux avec une chaine matchante, c'est pour voir si quelqu'un est enregistré et
    avoir accès à ses données"""
    recherche = []
    with open("patients.txt", "r") as f:
        for line in f:
            l = line.split()
            mec = p.Patient()
            adresse = ""
            date = [ int(l[2]), int(l[3]), int(l[4]) ]
            for elt in l[7:]:
                adresse = adresse + " " + elt
                mec.saisie(l[0], l[1], l[5], l[6], adresse, date)
            for i in range(len(l)):
                if l[i] == str(string):
                    recherche.append(mec)
    if recherche == []:
        return "La recherche n'a pas aboutie"
    else:
        return recherche


def indice_ligne_patient(mail):
    """cette fonction renvoie -1 : le patient dont le mail à été rentré n'existe pas
    c'est à dire on peut le créer, sinon cette fonction renvoie l'indice de la ligne
    c'est à dire l'indice de la liste dans laquelle on peut stocker les lignes + 1"""
    indiceligne = -1
    with open("patients.txt", "r") as f:
        lignes = f.readlines()
        for texte in lignes:
            l = texte.split()
            if l[5] == mail :
                indiceligne = lignes.index(texte) + 1
    return indiceligne


def creer_patient(prenom, nom, jour, mois, annee, mail, telephone, adresse):
    """Cette fonction créé un nouveau patient et rentre ses elements dans la base de donée, 
    elle retournera une erreur si le patient s'est déjà enregistré avec ce mail"""
    indligne = indice_ligne_patient(mail)
    if indligne == -1:
        fichier = open ("patients.txt", "a")
        fichier.write("\n" + str(prenom) + " " + str(nom) + " " + str(jour) + " " + str(mois) + " " + str(annee) + " " + str(mail) + " " + str(telephone) + " " + str(adresse))
        fichier.close()
        return "le patient a bien été créé"
    else :
        return "Un patient avec le même mail existe déjà sur notre application doctobélix"

"""
def supprimer_patient(mail):
    ""ce programme permet de supprimer un patient de la base de donnée en supprimant ses 
    données également""
    indligne = indice_ligne_patient(mail)
    if indligne == -1:
        return "le patient que vous essayez de supprimer n'existe pas encore sur doctobélix"
    else :
        with open("patients.txt", "r") as f:
            lignes = f.readlines()
        lignes.pop(indligne - 1)
        with open("patients.txt", "w") as f:
            f.writelines(lignes)
"""
            

def supprimer_patient(mail):
    """ce programme permet de supprimer un patient de la base de donnée en supprimant ses 
    données également"""
    indligne = indice_ligne_patient(mail)
    if indligne == -1:
        return "le patient que vous essayez de supprimer n'existe pas encore sur doctobélix"
    else :
        with open("patients.txt", "r") as f:
            lignes = f.readlines()
        deleted_text = lignes.pop(indligne - 1)
        with open("patients.txt", "w") as f:
            for ligne in lignes:
                if ligne != str(deleted_text) + "\n" :
                    f.write(ligne)



"""
def supprimer_patient(mail):
    indligne = indice_ligne_patient(mail)
    old = ""
    if indligne == -1:
        return "le patient que vous essayez de supprimer n'existe pas encore sur doctobélix"
    else :
        with open("patients.txt", "r") as f:
            lignes = f.readlines()
        lignes.pop(indligne - 1)
        for elt in lignes:
            old += elt
        l = old.split("\n")
        #old = ""
        #for elt in l:
        #    old += elt
        with open("patients.txt", "w") as f:
            n = len(l)
            for i in  range(n - 1):
                f.write(l[i] + "\n")
        with open("patients.txt", "a") as f:
            f.write(l[n-1])
"""


def modifier_patient(prenom, nom, jour, mois, annee, mail, telephone, adresse):
    """but : modifier la ligne d'un patient à partir de son mail, qui est par définition
    unique"""
    indligne = indice_ligne_patient(mail)
    if indligne == -1:
        return "Le patient à modifier n'a pas été trouvé dans notre application doctobélix"
    else:
        supprimer_patient(mail)
        creer_patient(prenom, nom, jour, mois, annee, mail, telephone, adresse)
        return "le patient a été modifié"


if __name__ == "__main__" :
    
    """
    fin_de_recherche = recherche_patient("GENTIANE")
    print(fin_de_recherche)
    """
    
    """
    a = indice_ligne_patient("ed.pro@gmail.com")
    #print(a)
    """
    
    """
    b = indice_ligne_patient("jojo.bizarre@venture.com")
    print(b)
    """
    
    """
    c = indice_ligne_patient("the.weng.06@gmail.com")
    print(c)
    """
    
    """
    creer_patient("joseph", "bellobitto", 5, 12, 2001, "jojo.bizarre@venture.com", "0684397515", "Lieu dit Le GENEPI POILLEY 76950 FRANCE")
    """
    
    """
    d = creer_patient("frigiel", "fandefanta", 21, 3, 2009, "fantacoeurfrigiel@yahoo.fr", "07846951", "1 rue samantha Davies SABLES-OLONNES 45500 FRANCE")
    print(d)
    """
    
    """e = supprimer_patient("fantacoeurfrigiel@yahoo.fr")  
    print(e)"""
    
    """d = modifier_patient("joseph", "bellobitto", 5, 12, 2001, "jojo.bizarre@venture.com", "0684397515", "Lieu dit Le GENEPI POILLEY 76950 FRANCE")
    print (d)"""