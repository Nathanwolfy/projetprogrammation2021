from . import profil as p
from . import lire_sql as lsql
import sqlite3


def recherche_medecin(string):
    """Cette fonction permet de prendre une chaine de caract en parametre, et retourne parmis tous les 
    medecins existants ceux avec une chaine matchante, c'est pour voir si quelqu'un est enregistre et
    avoir acces a ses donnees"""
    recherche = []
    connection = sqlite3.connect("donnees.db")
    cursor = connection.cursor()
    req = cursor.execute('SELECT * FROM medecins')
    for row in req.fetchall():
        l = row[5].split()
        for elt in row :
            if elt == string :
                recherche.append(lsql.lire_sql_patient(row))
        for elt in l :
            if elt == string :
                recherche.append(lsql.lire_sql_patient(row))
    connection.close()
    return recherche


def medecin_existe(mail):
    """cette fonction prends un mail, regarde si il existe un medecin enregistre
    avec ce mail, si oui renvoie True, si non renvoie False"""
    connection = sqlite3.connect("donnees.db")
    cursor = connection.cursor()
    sql_mail = (str(mail),)
    cursor.execute('SELECT * FROM medecins WHERE mail = ?', sql_mail)
    medecin_qui_existe_deja = cursor.fetchone()
    connection.close()
    return medecin_qui_existe_deja != None


def creer_medecin(prenom, nom, travail, mail, telephone, adresse):
    """Cette fonction cree un nouveau medecin et rentre ses elements dans la base de donnee, 
    elle retournera une erreur si le medecin s'est deja enregistre avec ce mail"""
    
    if medecin_existe(mail) :
        return "Un medecin avec le meme mail existe deja sur notre application doctobelix"
    
    else :
        connection = sqlite3.connect("donnees.db")
        cursor = connection.cursor()
        nouveau_medecin = (prenom, nom, travail, mail, telephone, adresse)
        cursor.execute('INSERT INTO medecins VALUES(?,?,?,?,?,?)', nouveau_medecin)
        connection.commit()
        connection.close()
        return "le medecin a bien été créé"
    

def creer_mdp_medecin(mail, mdp):
    """cree les donnes du medecin dans la base de donnee id"""
    if lsql.mdp_existe(mail) :
        return "Un login avec le meme mail existe deja sur notre application doctobelix"
    else:
        connection = sqlite3.connect("donnees.db")
        cursor = connection.cursor()
        nouveau_login = (mail, mdp, "d")
        cursor.execute('INSERT INTO identifiants VALUES(?,?,?)', nouveau_login)
        connection.commit()
        connection.close()
        return "le login a bien été créé"
            

def supprimer_medecin(mail):
    """ce programme permet de supprimer un medecin de la base de donnee en supprimant ses 
    donnees egalement mais ne supprime pas son mail et mdp de la bdd identifiants"""
    
    if medecin_existe(mail) :
        connection = sqlite3.connect("donnees.db")
        cursor = connection.cursor()
        sql_mail = (str(mail),) 
        cursor.execute('DELETE FROM medecins WHERE mail=?', sql_mail)
        connection.commit()
        connection.close()
        return "Le medecin ainsi que ses donnees ont ete supprimees"
    else :
        return "le medecin que vous essayez de supprimer n'existe pas encore sur doctobélix"


def supprimer_mdp_medecin(mail):
    """supprimme les donnees du medecin en id"""
    if lsql.mdp_existe(mail) :
        connection = sqlite3.connect("donnees.db")
        cursor = connection.cursor()
        sql_mail = (str(mail),) 
        cursor.execute('DELETE FROM identifiants WHERE mail=?', sql_mail)
        connection.commit()
        connection.close()
        return "Le medecin ainsi que son mdp a ete supprimee"
    else :
        return "le medecin que vous essayez de supprimer n'existe pas encore sur doctobélix"


def supprimer_un_medecin_de_doctobelix(mail):
    """cette fonction supprime les donnees d'un medecin en id et en donnees 
    personnelles, le medecin est donc desinscrit"""
    if lsql.mdp_existe(mail) and medecin_existe(mail) :
        supprimer_mdp_medecin(mail)
        supprimer_medecin(mail)
    else :
        return"le medecin que vous cherchez a supprimer n'existe pas sur doctobelix"
        

def modifier_medecin(prenom, nom, travail, mail, telephone, adresse):
    """but : modifier les donnees d'un medecin à partir de son mail, qui est par définition
    unique, attention ceci dit il est impossible de modifier son e-mail"""
    if medecin_existe(mail) :
        supprimer_medecin(mail)
        creer_medecin(prenom, nom, travail, mail, telephone, adresse)
        return "le medecin a été modifié"
    else:
        return "Le medecin à modifier n'a pas été trouvé dans notre application doctobélix"


def connexion_medecin_reussie(mail, mdp):
    """Cette fonction permet de voir si le mdp correspond avec le mail mis
    par l'utilisateur ou non, elle envoie True => le mail et le mdp 
    sont coherents, sinon elle envoie False"""
    connexion_reussie = False
    
    if medecin_existe(mail):
        connection = sqlite3.connect("donnees.db")
        cursor = connection.cursor()
        sql_mail = (str(mail),)
        cursor.execute('SELECT mdp FROM identifiants WHERE mail = ?', sql_mail)
        if cursor.fetchone()[0] == mdp:
            connexion_reussie = True
        return connexion_reussie
    else :
        return connexion_reussie

def inscription_medecin(prenom, nom, travail, mail, telephone, adresse, mdp1, mdp2):
    if medecin_existe(mail):
        return "Le medecin existe deja sur doctobelix"
    else:
        if mdp1 == mdp2 :#demander deux fois le mot de passe, pour etre sur de pas taper le mauvais
            creer_medecin(prenom, nom, travail, mail, telephone, adresse)
            creer_mdp_medecin(mail, mdp1)
            return "le medecin à bien ete cree sur doctobelix"
        else :
            return "les mots de passes ne matchent pas entre eux, creation du profil impossible"


if __name__ == "__main__" :
    
    """
    fin_de_recherche = recherche_medecin("jules")
    print(fin_de_recherche)
    """
    
    """
    a = indice_ligne_medecin("mag_kine@alumni.enac.org")
    print(a)
    """
    
    """
    c = indice_ligne_medecin("the.weng.06@gmail.com")
    print(c)
    """
    
    """
    d = creer_medecin("pediatre", "zelvac", "coptim", "zelvac_mc_pro@gmail.com", "0264879314", "9 boulevard Le Cleach LOGUIVY-DE-LA-MER 22500 FRANCE")
    print(d)
    """
    
    """
    f = creer_medecin("homeopathe", "lamere", "Delabatte", "ellemouffet@itpas.com", "0248792167", "7 avenue Airexpo LOUVIGNE-DU-DESERT 35400 FRANCE")
    print(f)
    """
    
    """
    e = supprimer_medecin("zelvac_mc_pro@gmail.com")  
    print(e)
    """
    
    """
    d = modifier_medecin("homeopathe", "lamere", "delabatte", "ellemouffet@itpas.com", "0248792167", "7 avenue AIREXPO LOUVIGNE-DU-DESERT 35400 FRANCE")
    print (d)
    """
