from PyQt6 import QtCore, QtGui, QtWidgets
import sys
import Achoixdocuser
import Bconnexionouinscription
import Cpriserdv
import DEdTPraticiens
import InscriptionDoc
import InscriptionPat
import fonctions

x = InscriptionPat
y = InscriptionDoc 
a = Achoixdocuser
b = Bconnexionouinscription
c = Cpriserdv
d = DEdTPraticiens
f = fonctions

seq={1:a, 2:b, 2:c, 3:c, 4:d}

#fonction qui pour un entier donné renvoie l'IHM lié à ce même entier



def main():
    
    #Création de l'application, en passant en argumant argv (vecteur contenant dans les arguments en ligne de commande)
    app1 = QtWidgets.QApplication(sys.argv)
    #Création de la fenêtre
    widget = QtWidgets.QWidget()
    #Création de notre widget custom, en le parentant à la fenêtre
    mycustomwidget = c.Ui_Form([0, 0])
    mycustomwidget.setupUi(widget)
    #On montre la fenêtre
    widget.show()
    #On execute la mainloop
    app1.exec()
    print(fonctions.metier)
    #on a ici le signal pour le métier du client que l'on peut ensuoite comparer dans une base de donnée

    app2 = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    mycustomwidget = d.Ui_Form()
    mycustomwidget.setupUi(widget)
    widget.show()
    app2.exec()       
    print(fonctions.n)
    print(fonctions.identifiant)
    print(fonctions.motdepass)

if __name__=="__main__":
    main()

"""





if __name__=="__main__":
    main()



    app.exec()
    widget = QtWidgets.QWidget()
    mycustomwidget = Achoixdocuser.Ui_Form()
    mycustomwidget.setupUi(widget)
    widget.show()
    app.exec()

    print(fonctions.metier)

    self.PatientButton.released.connect(lambda: affiche("Patient"))
    self.DoctorButton.released.connect(lambda: affiche("Doctor"))
        
"""